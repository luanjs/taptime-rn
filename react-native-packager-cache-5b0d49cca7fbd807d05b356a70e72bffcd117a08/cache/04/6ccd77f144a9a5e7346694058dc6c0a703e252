Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Game = undefined;
var _jsxFileName = "/home/luan/native/taptime/src/components/Game.js";

var _react = require("react");

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require("react-native");

var _firebase = require("firebase");

var _firebase2 = babelHelpers.interopRequireDefault(_firebase);

var _reactNativeRouterFlux = require("react-native-router-flux");

var _ = require("./");

var seq = [1, 2, 3, 4, 5, 6];
var rodada = 0;
var totalToques = 0;

var Game = function (_Component) {
  babelHelpers.inherits(Game, _Component);

  function Game(props) {
    babelHelpers.classCallCheck(this, Game);

    var _this = babelHelpers.possibleConstructorReturn(this, (Game.__proto__ || Object.getPrototypeOf(Game)).call(this, props));

    _this.state = { corFundo: "white" };
    _this.trataEvento = _this.trataEvento.bind(_this);
    _this.reiniciar = _this.reiniciar.bind(_this);
    _this.state = { show: [1, 1, 1, 1, 1, 1], progress: 0 };
    return _this;
  }

  babelHelpers.createClass(Game, [{
    key: "fire",
    value: function fire() {
      var fire = _firebase2.default.database();
      fire.ref("pessoa").set("luan");
    }
  }, {
    key: "reiniciar",
    value: function reiniciar(embaralhar) {

      for (var i = 0; i < this.state.show.length; i++) {
        this.state.show[i] = 1;
      }

      this.setState({ corFundo: "white" });
      this.setState({ progress: 0 });
      rodada = 0;

      if (embaralhar) {
        seq = shuffle(seq);
        totalToques = 0;
      }
    }
  }, {
    key: "trataEvento",
    value: function trataEvento(corFundo, num) {
      var _this2 = this;

      totalToques++;

      if (rodada === 5) {

        _reactNativeRouterFlux.Actions.resultado();
        _reactNativeRouterFlux.Actions.resultado({
          onBack: function onBack() {
            _reactNativeRouterFlux.Actions.pop();
            _this2.reiniciar();
          }, toques: totalToques
        });
      }

      if (seq[rodada] === num) {
        this.setState({ corFundo: corFundo });
        this.setState({ progress: (rodada + 1) / 6 });
        this.state.show[num - 1] = 0;
        rodada++;
      } else {
        this.reiniciar(0);
      }
      this.forceUpdate();
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        _reactNative.View,
        { style: [style.container, { backgroundColor: this.state.corFundo }], __source: {
            fileName: _jsxFileName,
            lineNumber: 81
          }
        },
        _react2.default.createElement(_reactNative.StatusBar, { hidden: true, style: { backgroundColor: "white" }, __source: {
            fileName: _jsxFileName,
            lineNumber: 82
          }
        }),
        _react2.default.createElement(_.Topo, { reiniciar: this.reiniciar, __source: {
            fileName: _jsxFileName,
            lineNumber: 83
          }
        }),
        _react2.default.createElement(
          _reactNative.View,
          { style: style.body, __source: {
              fileName: _jsxFileName,
              lineNumber: 85
            }
          },
          _react2.default.createElement(
            _reactNative.View,
            { style: style.containerBtn, __source: {
                fileName: _jsxFileName,
                lineNumber: 86
              }
            },
            _react2.default.createElement(_.Bloco, {
              func: this.trataEvento,
              value: "1",
              cor: "#0166FF",
              show: this.state.show[0],
              __source: {
                fileName: _jsxFileName,
                lineNumber: 87
              }
            }),
            _react2.default.createElement(_.Bloco, {
              func: this.trataEvento,
              value: "2",
              cor: "#F70301",
              show: this.state.show[1],
              __source: {
                fileName: _jsxFileName,
                lineNumber: 93
              }
            })
          ),
          _react2.default.createElement(
            _reactNative.View,
            { style: style.containerBtn, __source: {
                fileName: _jsxFileName,
                lineNumber: 101
              }
            },
            _react2.default.createElement(_.Bloco, {
              func: this.trataEvento,
              value: "3",
              cor: "#006700",
              show: this.state.show[2],
              __source: {
                fileName: _jsxFileName,
                lineNumber: 102
              }
            }),
            _react2.default.createElement(_.Bloco, {
              func: this.trataEvento,
              value: "4",
              cor: "#FECB00",
              show: this.state.show[3],
              __source: {
                fileName: _jsxFileName,
                lineNumber: 108
              }
            })
          ),
          _react2.default.createElement(
            _reactNative.View,
            { style: style.containerBtn, __source: {
                fileName: _jsxFileName,
                lineNumber: 116
              }
            },
            _react2.default.createElement(_.Bloco, {
              func: this.trataEvento,
              value: "5",
              cor: "#CBCBCB",
              show: this.state.show[4],
              __source: {
                fileName: _jsxFileName,
                lineNumber: 117
              }
            }),
            _react2.default.createElement(_.Bloco, {
              func: this.trataEvento,
              value: "6",
              cor: "#666632",
              show: this.state.show[5],
              __source: {
                fileName: _jsxFileName,
                lineNumber: 123
              }
            })
          )
        ),
        _react2.default.createElement(_reactNative.ProgressBarAndroid, {
          styleAttr: "Horizontal",
          progress: this.state.progress,
          indeterminate: false,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 131
          }
        })
      );
    }
  }]);
  return Game;
}(_react.Component);

var style = _reactNative.StyleSheet.create({
  container: {
    flex: 1
  },
  containerBtn: {
    flexDirection: "row"
  },

  body: {
    flex: 1,
    borderWidth: 0,
    borderColor: "black",
    alignItems: "center",
    justifyContent: "center"
  }
});

function shuffle(array) {
  var currentIndex = array.length,
      temporaryValue,
      randomIndex;

  while (0 !== currentIndex) {
    randomIndex = Math.floor(Math.random() * currentIndex);
    currentIndex -= 1;

    temporaryValue = array[currentIndex];
    array[currentIndex] = array[randomIndex];
    array[randomIndex] = temporaryValue;
  }

  return array;
}

exports.Game = Game;